{% comment %}
  App Block: Product Carousel
  Compatibility: Online Store 2.0
{% endcomment %}

{{ 'product-carousel.css' | asset_url | stylesheet_tag }}

<div
  class="flex flex-col-reverse md:flex-row w-full items-center opacity-0 transition-opacity duration-700 ease-out my-5"
  id="carousel-container-{{ block.id }}"
  role="region"
  aria-roledescription="carousel"
  aria-label="Product carousel"
>
  <!-- Dynamic text -->
  <div
    class="w-full md:w-1/2 md:space-y-5 md:text-left opacity-0 translate-y-8 transition-all duration-700 ease-out delay-300"
    id="text-container-{{ block.id }}"
  >
    <h2
      id="product-title-{{ block.id }}"
      class="!text-6xl !font-bold uppercase opacity-0 translate-y-8 transition-all duration-500 ease-out delay-500"
      style="color: {{ block.settings.carousel_title_color }};"
    >
      <span id="title-1-{{ block.id }}" class="block"></span>
      <span id="title-2-{{ block.id }}" class="block"></span>
      <span id="title-3-{{ block.id }}" class="block"></span>
    </h2>

    <h3
      id="product-description-{{ block.id }}"
      class="!text-3xl py-4 opacity-0 translate-y-8 transition-all duration-500 ease-out delay-700"
      style="color: {{ block.settings.carousel_description_color }};"
    ></h3>

    {% if block.settings.show_button == true and block.settings.button_text != blank %}
      {% assign button_classes = 'flex font-bold uppercase items-center gap-2 !text-3xl opacity-0 translate-y-8 transition-all duration-500 ease-out delay-900 w-fit px-4' %}

      {% if block.settings.button_border == true %}
        {% assign button_classes = button_classes | append: ' border' %}
      {% endif %}

      {% if block.settings.button_border_radius != 'rounded-none' %}
        {% assign button_classes = button_classes | append: ' ' | append: block.settings.button_border_radius %}
      {% endif %}

      <div
        class="{{ button_classes }}"
        id="button-container-{{ block.id }}"
        style="color: {{ block.settings.carousel_button_color }};"
      >
        <a
          id="product-button-{{ block.id }}"
          href=""
          class="flex items-center gap-2"

          aria-label="View product details"
        >
          {{ block.settings.button_text }}
          <button
            class="flex items-center justify-center transition-transform hover:translate-x-2 duration-300"
            aria-hidden="true"
          >
            {% case block.settings.button_icon %}
              {% when 'none' %}

              {% when 'arrow-right' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 12H5m14 0-4 4m4-4-4-4"/>
                </svg>
              {% when 'arrow-left' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12l4-4m-4 4 4 4"/>
                </svg>
              {% when 'cart' %}
                <!-- Shopping Cart -->
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 4h1.5L9 16m0 0h8m-8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-8.5-3h9.25L19 7H7.312"/>
                </svg>
              {% when 'heart' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12.01 6.001C6.5 1 1 8 5.782 13.001L12.011 20l6.23-7C23 8 17.5 1 12.01 6.002Z"/>
                </svg>

              {% when 'star' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-width="2" d="M11.083 5.104c.35-.8 1.485-.8 1.834 0l1.752 4.022a1 1 0 0 0 .84.597l4.463.342c.9.069 1.255 1.2.556 1.771l-3.33 2.723a1 1 0 0 0-.337 1.016l1.03 4.119c.214.858-.71 1.552-1.474 1.106l-3.913-2.281a1 1 0 0 0-1.008 0L7.583 20.8c-.764.446-1.688-.248-1.474-1.106l1.03-4.119A1 1 0 0 0 6.8 14.56l-3.33-2.723c-.698-.571-.342-1.702.557-1.771l4.462-.342a1 1 0 0 0 .84-.597l1.753-4.022Z"/>
                </svg>

              {% when 'chevron-right' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m10 16 4-4-4-4"/>
                </svg>

              {% when 'chevron-left' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m14 8-4 4 4 4"/>
                </svg>

              {% when 'arrow-up' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v13m0-13 4 4m-4-4-4 4"/>
                </svg>

              {% when 'arrow-down' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19V5m0 14-4-4m4 4 4-4"/>
                </svg>

              {% when 'cash' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 7V6a1 1 0 0 1 1-1h11a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-1M3 18v-7a1 1 0 0 1 1-1h11a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1Zm8-3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"/>
                </svg>
              {% when 'credit-card' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M6 14h2m3 0h5M3 7v10a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1Z"/>
                </svg>
              {% when 'wallet' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8H5m12 0a1 1 0 0 1 1 1v2.6M17 8l-4-4M5 8a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.6M5 8l4-4 4 4m6 4h-4a2 2 0 1 0 0 4h4a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Z"/>
                </svg>
              {% when 'bag' %}
                <svg
                  class="w-10 h-10"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 10V6a3 3 0 0 1 3-3v0a3 3 0 0 1 3 3v4m3-2 .917 11.923A1 1 0 0 1 17.92 21H6.08a1 1 0 0 1-.997-1.077L6 8h12Z"/>
                </svg>
              {% else %}
                <!-- Icône par défaut (Arrow Right) -->
                <svg class="w-8 h8" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7 5l5 5-5 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            {% endcase %}
          </button>
        </a>
      </div>
    {% endif %}
  </div>

  <!-- Product carousel -->
  <div
    class="w-full md:w-1/2 relative opacity-0 scale-95 transition-all duration-700 ease-out"
    id="carousel-wrapper-{{ block.id }}"
  >
    {% if block.settings.products != blank %}
      <div class="relative">
        <div
          id="product-carousel-{{ block.id }}"
          aria-live="polite"
        >
          {% for product in block.settings.products %}
            <img
              src="{{ product.featured_image | img_url: 'large' }}"
              alt="{{ product.title }}"
              class="rounded-3xl w-full product-image-{{ block.id }} transition-all duration-700 ease-out {% if forloop.first %}opacity-100 scale-100{% else %}opacity-0 scale-95 hidden{% endif %}"
              data-title1="{{ product.metafields.custom.title1 | escape }}"
              data-title2="{{ product.metafields.custom.title2 | escape }}"
              data-title3="{{ product.metafields.custom.title3 | escape }}"
              data-description="{{ product.metafields.custom.description_short | escape }}"
              data-producturl="{{ product.url }}"
              width="580"
              height="580"
              loading="lazy"
            >
          {% endfor %}
        </div>
      </div>
    {% else %}
      <div class="bg-gray-300 w-full h-64 flex items-center justify-center text-gray-600">Select products</div>
    {% endif %}
  </div>
</div>

<script>
  function initProductCarousel(blockId) {
    const images = document.querySelectorAll('.product-image-' + blockId);
    const title1 = document.getElementById('title-1-' + blockId);
    const title2 = document.getElementById('title-2-' + blockId);
    const title3 = document.getElementById('title-3-' + blockId);
    const description = document.getElementById('product-description-' + blockId);
    const priceElement = document.getElementById('product-price-' + blockId);
    const buttonContainer = document.getElementById('button-container-' + blockId);
    const productButton = document.getElementById('product-button-' + blockId);
    const carouselContainer = document.getElementById('carousel-container-' + blockId);
    const carouselWrapper = document.getElementById('carousel-wrapper-' + blockId);
    const textContainer = document.getElementById('text-container-' + blockId);

    let currentIndex = 0;
    let isAnimating = false;

    // Initial animation on load
    setTimeout(() => {
      carouselContainer.classList.remove('opacity-0');
      carouselWrapper.classList.remove('opacity-0', 'scale-95');

      setTimeout(() => {
        initializeCarousel();
        textContainer.classList.remove('opacity-0', 'translate-y-8');
        title1.parentElement.classList.remove('opacity-0', 'translate-y-8');
        description.classList.remove('opacity-0', 'translate-y-8');

        // Vérifier si buttonContainer existe avant de manipuler ses classes
        if (buttonContainer) {
          setTimeout(() => {
            buttonContainer.classList.remove('opacity-0', 'translate-y-8');
          }, 300);
        }
      }, 500);
    }, 500);

    function initializeCarousel() {
      const firstImage = images[0];

      if (firstImage) {
        title1.textContent = firstImage.dataset.title1;
        title2.textContent = firstImage.dataset.title2;
        title3.textContent = firstImage.dataset.title3;
        description.textContent = firstImage.dataset.description;

        // Vérifier si productButton existe avant de définir son href
        if (productButton) {
          productButton.href = firstImage.dataset.producturl;
        }

        // Vérifier si buttonContainer existe avant de manipuler ses classes
        if (buttonContainer) {
          buttonContainer.classList.remove('opacity-0', 'translate-y-8');
        }
      }
    }

    function updateCarousel() {
      if (isAnimating) return;
      isAnimating = true;

      const currentImage = images[currentIndex];
      currentImage.classList.add('opacity-0', 'scale-95');

      textContainer.classList.add('opacity-0', 'translate-y-8');
      description.classList.add('opacity-0', 'translate-y-8');

      // Vérifier si buttonContainer existe avant de manipuler ses classes
      if (buttonContainer) {
        buttonContainer.classList.add('opacity-0', 'translate-y-8');
      }

      setTimeout(() => {
        currentImage.classList.add('hidden');

        currentIndex = (currentIndex + 1) % images.length;
        const nextImage = images[currentIndex];
        nextImage.classList.remove('hidden');

        setTimeout(() => {
          nextImage.classList.remove('opacity-0', 'scale-95');

          setTimeout(() => {
            title1.textContent = nextImage.dataset.title1;
            title2.textContent = nextImage.dataset.title2;
            title3.textContent = nextImage.dataset.title3;
            description.textContent = nextImage.dataset.description;

            // Vérifier si productButton existe avant de définir son href
            if (productButton) {
              productButton.href = nextImage.dataset.producturl;
            }

            textContainer.classList.remove('opacity-0', 'translate-y-8');
            description.classList.remove('opacity-0', 'translate-y-8');

            setTimeout(() => {
              // Vérifier si buttonContainer existe avant de manipuler ses classes
              if (buttonContainer) {
                buttonContainer.classList.remove('opacity-0', 'translate-y-8');
              }
              isAnimating = false;
            }, 300);
          }, 500);
        }, 100);
      }, 500);
    }

    const delay = Math.max(3000, {{block.settings.delay}} || 5000);
    setInterval(updateCarousel, delay);
  }

  // Initialize all product carousels on the page
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('[id^="carousel-container-"]').forEach((container) => {
      const blockId = container.id.replace('carousel-container-', '');
      initProductCarousel(blockId);
    });
  });
</script>

{% schema %}
{
  "name": "Product Carousel",
  "target": "section",
  "settings": [
    {
      "type": "product_list",
      "id": "products",
      "label": "Select products"
    },
    {
      "type": "checkbox",
      "id": "show_button",
      "label": "Show button",
      "default": true
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Shop now"
    },
    {
      "type": "checkbox",
      "id": "button_border",
      "label": "Button border",
      "default": true
    },
    {
      "type": "select",
      "id": "button_border_radius",
      "label": "Button border radius",
      "default": "rounded-none",
      "options": [
        { "value": "rounded-sm", "label": "Rounded small" },
        { "value": "rounded-md", "label": "Rounded medium" },
        { "value": "rounded-lg", "label": "Rounded large" },
        { "value": "rounded-xl", "label": "Rounded extra large" },
        { "value": "rounded-2xl", "label": "Rounded double extra large" },
        { "value": "rounded-3xl", "label": "Rounded triple extra large" },
        { "value": "rounded-full", "label": "Full" },
        { "value": "rounded-none", "label": "None" }
      ]
    },
    {
      "type": "select",
      "id": "button_icon",
      "label": "Button icon",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "arrow-right", "label": "Arrow Right ➡️" },
        { "value": "arrow-left", "label": "Arrow Left ⬅️" },
        { "value": "cart", "label": "Shopping Cart 🛒" },
        { "value": "heart", "label": "Heart ❤️" },
        { "value": "star", "label": "Star ⭐" },
        { "value": "chevron-right", "label": "Chevron Right >" },
        { "value": "chevron-left", "label": "Chevron Left <" },
        { "value": "arrow-up", "label": "Arrow Up ⬆️" },
        { "value": "arrow-down", "label": "Arrow Down ⬇️" },
        { "value": "cash", "label": "Cash 💵" },
        { "value": "credit-card", "label": "Credit Card 💳" },
        { "value": "wallet", "label": "Wallet 💰" },
        { "value": "bag", "label": "Bag 👜" }
      ],
      "default": "arrow-right"
    },
    {
      "type": "color",
      "id": "carousel_title_color",
      "label": "Carousel title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "carousel_description_color",
      "label": "Carousel description color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "carousel_button_color",
      "label": "Carousel button color",
      "default": "#000000"
    },
    {
      "type": "number",
      "id": "delay",
      "label": "Change delay (ms)",
      "default": 5000,
      "info": "Minimum 3000ms"
    },
    {
      "type": "header",
      "content": "Product Metafields"
    },
    {
      "type": "paragraph",
      "content": "To edit titles and descriptions, click the links below:"
    },
    {
      "type": "paragraph",
      "content": "[Edit products content in admin](/admin/bulk?resource_name=Product&edit=metafields.custom.title1,metafields.custom.title2,metafields.custom.title3,metafields.custom.description_short)"
    }
  ]
}
{% endschema %}
